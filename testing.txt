module one (input I, output O);
  assign O = I;
endmodule

module two (input I, output O);
  assign O = I;
endmodule

module top (input I, output O);
  
  wire W;
  
  one inst1 (.I(I), .O(W));
  two inst2 (.I(W), .O(O));
  
endmodule
module serializer(
  input clk,
  input load,
  input reg[7:0] in_value,
  output reg o_bit);
  reg[7:0] r1;
  always @(posedge clk)
    begin
      if(load==1)
        begin
          r1 <= in_value;
        end
      else
        begin
          o_bit <= r1[7];
          r1 = r1 <<1;
        end
    end
endmodule
module shifter(
  input clk,
  input load,
  input right,
  input left,
  input[4:0] in_value,
  output reg[4:0] value);
  reg [4:0]r1;
  always @(posedge clk)
    begin
      if(load==1)
        begin
          r1[4:0] <=in_value[4:0];
        end
      else if(right==1)
        begin
          r1 = r1 >> 1;
        end
      else if(left==1)
        begin
          r1 = r1 << 1;
        end
    end
  assign value[4:0] = r1[4:0];
endmodule